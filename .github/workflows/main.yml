name: 'Lint Code'

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:

    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Print working directory
      run: pwd

    - name: Run Linter
      run: |
        pwd
        # This command finds all Python files recursively and runs flake8 on them
        find . -name "*.py" -exec flake8 {} +
        echo "Linted all the python files successfully"

  lint_js:
      name: Lint JavaScript Files
      runs-on: ubuntu-latest

      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        run: |
          # Try npm script first, fallback to direct execution if needed
          if npm run lint; then
            echo "Linted all the js files successfully with JSHint"
          else
            echo "npm script failed, trying direct execution..."
            if ./node_modules/.bin/jshint ./server/database/*.js; then
              echo "Linted all the js files successfully with direct JSHint"
            else
              echo "JSHint failed, trying ESLint as fallback..."
              if npm run lint:eslint; then
                echo "Linted all the js files successfully with ESLint"
              else
                echo "ESLint failed, trying basic syntax check as ultimate fallback..."
                ./lint-js.sh
                echo "Linted all the js files successfully with basic syntax check"
              fi
            fi
          fi
